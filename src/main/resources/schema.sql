DROP SEQUENCE IF EXISTS curriculum_seq;
CREATE SEQUENCE IF NOT EXISTS curriculum_seq
INCREMENT BY 1
START WITH 3;

DROP TABLE IF EXISTS curriculum CASCADE;
CREATE TABLE IF NOT EXISTS curriculum
(id INTEGER NOT NULL,
name VARCHAR(25) UNIQUE NOT NULL,
version VARCHAR(25) NOT NULL,
creator_id INTEGER NOT NULL,
date_created TIMESTAMP NOT NULL,
number_of_weeks INTEGER NOT NULL,
PRIMARY KEY(id));

DROP SEQUENCE IF EXISTS topic_seq;
CREATE SEQUENCE IF NOT EXISTS topic_seq
INCREMENT BY 1
START WITH 5;

DROP TABLE IF EXISTS topic CASCADE;
CREATE TABLE IF NOT EXISTS topic
(id INTEGER NOT NULL,
name VARCHAR(25),
PRIMARY KEY(id));

DROP SEQUENCE IF EXISTS subtopic_seq;
CREATE SEQUENCE IF NOT EXISTS subtopic_seq
INCREMENT BY 1
START WITH 12;

-- DROP TABLE IF EXISTS subtopic CASCADE;
-- DROP TABLE IF EXISTS topic CASCADE;
-- ALTER TABLE subtopic
-- DROP CONSTRAINT FKN59K91C6XDUUKIJFEJ2IVN5AD;
DROP TABLE IF EXISTS subtopic CASCADE;
CREATE TABLE IF NOT EXISTS subtopic
(subtopic_id INTEGER NOT NULL,
name VARCHAR(50),
parent_topic_id INTEGER,
PRIMARY KEY(subtopic_id));

DROP TABLE IF EXISTS CURRICULUM CASCADE;
CREATE TABLE IF NOT EXISTS CURRICULUM
(ID INTEGER NOT NULL,
name varchar(25),
version integer,
creator_id integer,
date_created date,
number_of_weeks integer,
status integer,
approved_by_id integer,
curriculum_week_id integer,
PRIMARY KEY(ID));
--FOREIGN KEY(curriculum_week_id) REFERENCES curriculum_week(curriculum_week_id));

DROP TABLE IF EXISTS CURRICULUM_WEEK CASCADE;
CREATE TABLE IF NOT EXISTS CURRICULUM_WEEK
(CURRICULUM_WEEK_ID INTEGER NOT NULL,
CURRICULUM_DAY_ID INTEGER,
WEEK_NUM INTEGER,
PRIMARY KEY(CURRICULUM_WEEK_ID));
--FOREIGN KEY(curriculum_day_id) REFERENCES CURRICULUM_DAY(curriculum_day_id));

DROP TABLE IF EXISTS CURRICULUM_DAY CASCADE;
CREATE TABLE IF NOT EXISTS CURRICULUM_DAY
(CURRICULUM_DAY_ID INTEGER NOT NULL,
DAY_NUM INTEGER,
subtopic_id INTEGER,
PRIMARY KEY(CURRICULUM_DAY_ID));
--FOREIGN KEY(subtopic_id) REFERENCES subtopic(subtopic_id));

